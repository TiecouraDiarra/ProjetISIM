/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Donne;

import static Donne.Connecter.url;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class Etudiants extends javax.swing.JFrame {

    /**
     * Creates new form Etudiants
     */
    //IMPORTER LES BIBLIOTHEQUES DE CONNECTION
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    static String url = "jdbc:mysql://localhost/gestion";
    static String user = "root";
    static String password = "";

    public Etudiants() {
        initComponents();
        Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmatricule = new javax.swing.JTextField();
        txtnom = new javax.swing.JTextField();
        jcniveau = new javax.swing.JComboBox();
        Badd = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Bdelete = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtdatnai = new com.toedter.calendar.JDateChooser();
        txtdateins = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtadresse = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtrecherche = new javax.swing.JTextField();
        Brecherche = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Matricule");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 14, 125, 32));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nom & Pr√©nom");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 64, 125, 32));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Date de Naiss...");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 114, 125, 32));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Date d'inscription");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 164, 125, 32));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Sexe");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 214, 125, 32));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Adresse");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 246, 125, 32));

        txtmatricule.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtmatricule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmatriculeActionPerformed(evt);
            }
        });
        jPanel1.add(txtmatricule, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 17, 140, 28));

        txtnom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomActionPerformed(evt);
            }
        });
        jPanel1.add(txtnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 67, 275, 28));

        jcniveau.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcniveau.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        jPanel1.add(jcniveau, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 214, 76, 28));

        Badd.setBackground(new java.awt.Color(102, 255, 102));
        Badd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Badd.setText("Ajouter");
        Badd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaddActionPerformed(evt);
            }
        });
        jPanel1.add(Badd, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 135, 35));

        jButton2.setBackground(new java.awt.Color(255, 153, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Modifier");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 135, 35));

        Bdelete.setBackground(new java.awt.Color(255, 51, 51));
        Bdelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Bdelete.setText("Suprimer");
        Bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdeleteActionPerformed(evt);
            }
        });
        jPanel1.add(Bdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 135, 35));

        jButton4.setBackground(new java.awt.Color(255, 255, 51));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Actualiser");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 360, 135, 35));

        txtdatnai.setDateFormatString("yyyy-MM-dd");
        jPanel1.add(txtdatnai, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 160, 30));
        jPanel1.add(txtdateins, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 160, 30));

        jScrollPane3.setViewportView(txtadresse);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 270, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, -1, 402));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INFORMATIONS ETUDIANTS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 6, 454, 56));

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 73, 636, -1));

        txtrecherche.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtrecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechercheActionPerformed(evt);
            }
        });
        txtrecherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheKeyReleased(evt);
            }
        });
        getContentPane().add(txtrecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(613, 30, 140, 28));

        Brecherche.setBackground(new java.awt.Color(204, 255, 51));
        Brecherche.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Brecherche.setText("Recherche");
        Brecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrechercheActionPerformed(evt);
            }
        });
        getContentPane().add(Brecherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 29, 125, 28));

        jScrollPane2.setViewportView(jTextPane1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 100, 60));

        setSize(new java.awt.Dimension(1132, 533));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtmatriculeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmatriculeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmatriculeActionPerformed

    private void txtnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomActionPerformed

    private void txtrechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechercheActionPerformed
        // TODO add your handling code here:
        Rechercher(txtrecherche.getText());
        Table();
    }//GEN-LAST:event_txtrechercheActionPerformed

    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(url, user, password);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean CheckEmptyField(String field) {
        if (!field.isEmpty()) {
            System.out.println("ok");
            return false;
        } else {
            javax.swing.JOptionPane.showMessageDialog(null,
                    "Ce champ ne peut pas √™tre vide");
            return true;
        }

    }
    

    private void BaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaddActionPerformed
        // Ajouter un √©tudiant:
        /*if(txtmatricule == null && txtnom ==null && txtdatnai==null && txtdateins==null && txtadresse==null){
         JOptionPane.showMessageDialog(null, "Les champs sont vides");
         }else{*/
        /*SimpleDateFormat sp = new SimpleDateFormat("yyyy/MM/dd");
        String date = sp.format(txtdatnai1.getDate());*/
        
        if (txtmatricule.getText().trim().isEmpty() || txtnom.getText().trim().isEmpty()
                || txtdatnai.getDateFormatString().trim().isEmpty() || txtdateins.getDateFormatString().trim().isEmpty()
                || txtadresse.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tous les champs sont obligatoires!");

        } else {
            try {
                Connect();
                String sql = "insert into etudiant (matricule,nom,naissance,inscription,sexe,adresse) value(?,?,?,?,?,?)"; //La requete pour faire appel aux imformations dans la base
                pst = con.prepareStatement(sql);
                pst.setString(1, txtmatricule.getText());
                pst.setString(2, txtnom.getText());
                /*SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String date = sdf.format(txtdatnai.getDate());
                pst.setString(3, date);*/
                pst.setString(3, txtdatnai.getDateFormatString());
                //pst.setString(3, ((JTextField)txtdatnai.getDateEditor().getUiComponent()).getText());
                pst.setString(4, txtdateins.getDateFormatString());
                /*String date2 = sdf.format(txtdateins.getDate());
                pst.setString(4, date2);*/
                pst.setString(5, jcniveau.getSelectedItem().toString());
                pst.setString(6, txtadresse.getText());
                pst.execute(); // EXECUTION DE LA REQUETE

                con.close();
                JOptionPane.showMessageDialog(null, "Enregistrement r√©ussi");
                Table();
                Actualiser();
                Badd.setEnabled(false);
            } catch (Exception e) {
                //e.printStackTrace(); //POUR GERER LES ERREURS 
                JOptionPane.showMessageDialog(null, "L'utilisateur " + txtmatricule.getText() + " " + "est deja dans la base");
            }
        }

    }//GEN-LAST:event_BaddActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (txtmatricule.getText().trim().isEmpty() || txtnom.getText().trim().isEmpty()
                || txtdateins.getDateFormatString().trim().isEmpty() || txtdateins.getDateFormatString().trim().isEmpty()
                || txtadresse.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Aucune modification, s'il vous pla√Æt veuillez choisir un √©tudiant √† modifier ");
        } else {
            try {
                /*if(txtmatricule.getText().length()!=19){
                 JOptionPane.showMessageDialog(null, "Aucune modification\n S'il vous pla√Æt, veuillez choisir un √©tudiant");
                 }else{*/
                Connect();
                pst = con.prepareStatement("update etudiant set nom=?,naissance=?,inscription=?,sexe=?,adresse=? where matricule=?");
                pst.setString(6, txtmatricule.getText());
                pst.setString(1, txtnom.getText());
                pst.setString(2, txtdateins.getDateFormatString());
                pst.setString(3, txtdateins.getDateFormatString());
                pst.setString(4, jcniveau.getSelectedItem().toString());
                pst.setString(5, txtadresse.getText());
                pst.executeUpdate(); // EXECUTION DE LA REQUETE
                con.close();
                JOptionPane.showMessageDialog(null, "Etudiant modifi√© avec succ√®s");
                Table();
                // }
            } catch (Exception e) {
                e.printStackTrace(); //POUR GERER LES ERREURS 
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selct = jTable1.getSelectedRow();
        txtmatricule.setText(model.getValueAt(selct, 0).toString());
        txtnom.setText(model.getValueAt(selct, 1).toString());
        txtdateins.setDateFormatString(model.getValueAt(selct, 2).toString());
        txtdateins.setDateFormatString(model.getValueAt(selct, 3).toString());
        jcniveau.setSelectedItem(model.getValueAt(selct, 4).toString());
        txtadresse.setText(model.getValueAt(selct, 5).toString());
    }//GEN-LAST:event_jTable1MouseReleased

    private void BdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdeleteActionPerformed
        // TODO add your handling code here:
        if (txtmatricule.getText().trim().isEmpty() || txtnom.getText().trim().isEmpty()
                || txtdateins.getDateFormatString().trim().isEmpty() || txtdateins.getDateFormatString().trim().isEmpty()
                || txtadresse.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner un √©tudiant");

        } else {

            try {
                if (JOptionPane.showConfirmDialog(null, "Attention, Voulez-vous vraiment supprimer",
                        "Supprimer Etudiant", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    Connect();
                    pst = con.prepareStatement("delete from etudiant where matricule=?");
                    pst.setString(1, txtmatricule.getText());
                    pst.execute(); // EXECUTION DE LA REQUETE
                    System.out.println("Supprimer");
                    JOptionPane.showMessageDialog(null, "Etudiant Supprim√© avec succ√©s");
                    con.close();
                    Table();
                    Actualiser();
                    //Bdelete.setEnabled(false);
                }
            } catch (Exception e) {
                e.printStackTrace(); //POUR GERER LES ERREURS 
            }
        }
    }//GEN-LAST:event_BdeleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Actualiser();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void BrechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrechercheActionPerformed
        // TODO add your handling code here:
        //Rechercher(txtrecherche.getText());
        
    }//GEN-LAST:event_BrechercheActionPerformed

    private void txtrechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheKeyReleased
        // TODO add your handling code here:
        Rechercher(txtrecherche.getText());
    }//GEN-LAST:event_txtrechercheKeyReleased

    public void Actualiser() {
        txtmatricule.setText("");
        txtnom.setText("");
        txtdateins.setDateFormatString("");
        txtdateins.setDateFormatString("");
        jcniveau.setSelectedItem("");
        txtadresse.setText("");
        Badd.setEnabled(true);
    }

    public void Table() {
        String[] etudiant = {"Matricules", "Noms & Pr√©noms", "Date Naissance", "Date Inscription", "Sexe", "Adresse"};
        String[] afficher = new String[7];

        DefaultTableModel model = new DefaultTableModel(null, etudiant);
        String sql = "select * from etudiant";

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection(url, user, password);

            Statement st = con.createStatement();
            rs = st.executeQuery(sql);

            while (rs.next()) {
                afficher[0] = rs.getString("matricule");
                afficher[1] = rs.getString("nom");
                afficher[2] = rs.getString("naissance");
                afficher[3] = rs.getString("inscription");
                afficher[4] = rs.getString("sexe");
                afficher[5] = rs.getString("adresse");
                model.addRow(afficher);
            }
            jTable1.setModel(model);
            con.close();
        } catch (Exception e) {

        }
    }
    private void Rechercher(String recherche){
        String etudiant[] = {
            "Matricules", 
            "Noms & Pr√©noms", 
            "Date Naissance", 
            "Date Inscription", 
            "Sexe", 
            "Adresse"
        };
        String vue[] = new String[7];
        DefaultTableModel model = new DefaultTableModel(null, etudiant);
        String sql = "select * from etudiant where matricule like '%"+recherche+"%'";
        try {
            Connect();
            Statement st = con.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                vue[0] = rs.getString("matricule");
                vue[1] = rs.getString("nom");
                vue[2] = rs.getString("naissance");
                vue[3] = rs.getString("inscription");
                vue[4] = rs.getString("sexe");
                vue[5] = rs.getString("adresse");
                model.addRow(vue);
            }
            jTable1.setModel(model);
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Etudiants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Etudiants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Etudiants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Etudiants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Etudiants().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Badd;
    private javax.swing.JButton Bdelete;
    private javax.swing.JButton Brecherche;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox jcniveau;
    private javax.swing.JTextPane txtadresse;
    private com.toedter.calendar.JDateChooser txtdateins;
    private com.toedter.calendar.JDateChooser txtdatnai;
    private javax.swing.JTextField txtmatricule;
    private javax.swing.JTextField txtnom;
    private javax.swing.JTextField txtrecherche;
    // End of variables declaration//GEN-END:variables
}
